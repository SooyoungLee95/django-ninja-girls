"""
Django settings for ras project.

Generated by 'django-admin startproject' using Django 3.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from pathlib import Path
from types import SimpleNamespace

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

env = environ.Env()
env.read_env(str(BASE_DIR / ".env"))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "ras.rideryo.apps.RideryoConfig",
    "ras.rider_app.apps.RiderAppConfig",
    "django_extensions",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": env.db("DATABASE_URL", default=f"sqlite:///{BASE_DIR / 'db.sqlite3'}"),
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "ko"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# AWS
AWS_ACCESS_KEY_ID = env.str("AWS_ACCESS_KEY_ID", default="test")
AWS_SECRET_ACCESS_KEY = env.str("AWS_SECRET_ACCESS_KEY", default="test")
AWS_REGION = env.str("AWS_REGION", default="us-east-1")
AWS_SNS_ENDPOINT_URL = env.str("AWS_SNS_ENDPOINT_URL", default="http://0.0.0.0:4566")
ARN_SNS_TOPIC_RIDER = env.str("ARN_SNS_TOPIC_RIDER", default="arn:aws:sns:us-east-1:000000000000:rider")
ARN_SNS_TOPIC_ORDER = env.str("ARN_SNS_TOPIC_ORDER", default="arn:aws:sns:us-east-1:000000000000:order")


# Jungleworks
JUNGLEWORKS_BASE_URL = env.str("JUNGLEWORKS_BASE_URL", default="https://api.tookanapp.com")
JUNGLEWORKS_API_KEY = env.str("JUNGLEWORKS_API_KEY", default="")
JUNGLEWORKS_ENABLE = env.bool("JUNGLEWORKS_ENABLE", default=False)


# 개인정보 암호화/복호화 키
FERNET_CRYPTO_KEY = env.str("FERNET_CRYPTO_KEY", default="CkjxwCCPDYkrS0d6-bmhDsuIcnajgutUDkqeZE-PkSw=").encode()


# FCM Credentials
FCM_SERVICE_ACCOUNT_KEY_FILENAME = env.str("FCM_SERVICE_ACCOUNT_KEY_FILENAME", default="serviceAccountKey.json")


# Authyo
AUTHYO = SimpleNamespace(
    BASE_URL=env.str("AUTHYO_URL", default="https://staging-authyo.yogiyo.co.kr"),
    FERNET_CRYPTO_KEY=env.str(
        "AUTHYO_FERNET_CRYPTO_KEY", default="azFuf3CpHYihwAUs5Cf0-_S3QJVfi-ZbS9rkJtIdkHI="
    ).encode(),
    SECRET_KEY=env.str("AUTHYO_SECRET_KEY", default="-----BEGIN PUBLIC KEY-----|-----END PUBLIC KEY-----|").replace(
        "|", "\n"
    ),
    ALGORITHM=env.str("AUTHYO_ALGORITHM", default="RS256"),
)

RIDERYO_BASE_URL = env.str("RIDERYO_BASE_URL", default="127.0.0.1")
RIDERYO_ENV = env.str("RIDERYO_ENV", default="rideryo-dev")
LOGGING = {
    "disable_existing_loggers": False,
    "version": 1,
    "formatters": {"verbose": {"format": "%(asctime)s %(name)s %(funcName)s:%(lineno)d %(levelname)s %(message)s"}},
    "handlers": {"console": {"class": "logging.StreamHandler", "level": "DEBUG", "formatter": "verbose"}},
    "loggers": {
        "ras": {"handlers": ["console"], "level": "DEBUG", "propagate": False},
        "django.db": {},
    },
}
